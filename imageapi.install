<?php
// $Id: imageapi.install,v 1.3.2.2 2008/07/23 21:11:35 dopry Exp $

/**
 *  Implementation of hook_requirements().
 */
define('IMAGEAPI_MINIMUM_PHP', '5.1');
define('IMAGEAPI_RECOMMENDED_PHP', '5.2');

function imageapi_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  // Check for an image library.
  if (count(imageapi_get_available_toolkits()) == 0) {
    $requirements['imageapi_toolkits'] = array(
      'title' => $t('ImageAPI Toolkit'),
      'value' => $t('No image toolkits available'),
      'severity' => REQUIREMENT_ERROR,
      'description' => $t('ImageAPI requires a toolkit such as ImageAPI GD or ImageAPI Imagemagick to function.'),
    );
  }
 

  if (version_compare(phpversion(), IMAGEAPI_RECOMMENDED_PHP) < 0) {
     $requirements['imageapi_php'] = array(
      'title' => $t('ImageAPI PHP'),
      'description' => $t('ImageAPI recommends at least PHP %version. Older versions of PHP are not supported but may function.', array('%version' => IMAGEAPI_RECOMMENDED_PHP)),
      'severity' => REQUIREMENT_WARNING,
    );
  }
  if (version_compare(phpversion(), IMAGEAPI_MINIMUM_PHP) < 0) {
    $requirements['imageapi_php'] = array(
      'title' => $t('ImageAPI PHP'),
      'description' => $t('ImageAPI requires at least PHP %version.', array('%version' => IMAGEAPI_MINIMUM_PHP)),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  
  return $requirements;
}


function imageapi_install() {
}

function imageapi_uninstall() {
}

function imageapi_enable() {
}

function imageapi_disable() {
}
